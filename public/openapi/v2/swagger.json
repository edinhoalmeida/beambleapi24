{
    "openapi": "3.0.0",
    "info": {
        "title": "Beamble API V2",
        "description": "* ðŸ”’ = routes or tags that requires authentication (by baerer)",
        "version": "0.2"
    },
    "servers": [
        {
            "url": "http://beamble.local/api"
        },
        {
            "url": "https://apibb.beamble.com/api"
        }
    ],
    "paths": {
        "/calls/history/all": {
            "get": {
                "tags": [
                    "videocall  ðŸ”’"
                ],
                "description": "Get a user history of calls.",
                "operationId": "adedc0492d3d091ed9596d2dee21d53b",
                "responses": {
                    "200": {
                        "description": "Get beamer profile",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Status of request",
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "description": "Request datas",
                                            "properties": {
                                                "last_calls": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/history"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "description": "Messages from api",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/calls/{user_id}": {
            "get": {
                "tags": [
                    "videocall  ðŸ”’"
                ],
                "description": "Beamer verify if is there are waiting calls",
                "operationId": "ed0416fdb60e8c2bacbbdfb2296f56aa",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "A beamer id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "if exists, return a Videocall",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "properties": {
                                                "success": {
                                                    "description": "Status of request",
                                                    "type": "boolean"
                                                },
                                                "data": {
                                                    "properties": {
                                                        "videocall": {
                                                            "properties": {
                                                                "status": {
                                                                    "type": "string",
                                                                    "example": "none"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "message": {
                                                    "description": "Listing calls",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "properties": {
                                                "success": {
                                                    "description": "Status of request",
                                                    "type": "boolean"
                                                },
                                                "data": {
                                                    "properties": {
                                                        "videocall": {
                                                            "$ref": "#/components/schemas/videocall"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "message": {
                                                    "description": "Messages from api",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "user_id or beamer id not recognized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/baseerror"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/calls/{user_id}/{beamer_id}/ask": {
            "post": {
                "tags": [
                    "videocall  ðŸ”’"
                ],
                "operationId": "4bc55cb6f808f4990cdbc7f996446f49",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "A client id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "beamer_id",
                        "in": "path",
                        "description": "A beamer id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "lat": {
                                        "type": "number"
                                    },
                                    "lng": {
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Video call asked with success, wainting that beamer confirms",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Status of request",
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "properties": {
                                                "videocall": {
                                                    "$ref": "#/components/schemas/videocall"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "description": "Messages from api",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "user_id or beamer id not recognized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/baseerror"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/calls/{call_id}/accept": {
            "post": {
                "tags": [
                    "videocall  ðŸ”’"
                ],
                "description": "Beamer accept call",
                "operationId": "0d9f3562240d96eef57854c399e52435",
                "parameters": [
                    {
                        "name": "call_id",
                        "in": "path",
                        "description": "A call id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Videocall accepted with success, the status is 'accepted' now",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Status of request",
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "properties": {
                                                "videocall": {
                                                    "$ref": "#/components/schemas/videocall"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "description": "Messages from api",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "user_id or beamer id not recognized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/baseerror"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/calls/{call_id}/reject": {
            "post": {
                "tags": [
                    "videocall  ðŸ”’"
                ],
                "description": "Beamer reject call",
                "operationId": "1b3a67a0cb5aa545b2f7cf6421487835",
                "parameters": [
                    {
                        "name": "call_id",
                        "in": "path",
                        "description": "A call id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Videocall rejected with success, the status is 'rejected' now",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Status of request",
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "properties": {
                                                "videocall": {
                                                    "properties": {
                                                        "status": {
                                                            "type": "string",
                                                            "example": "rejected"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "description": "Messages from api",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "user_id or beamer id not recognized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/baseerror"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/calls/{call_id}/accepted": {
            "get": {
                "tags": [
                    "videocall  ðŸ”’"
                ],
                "description": "Client verify if call was accepted",
                "operationId": "f4188bf690df6d9d32f5f1fc89045fc7",
                "parameters": [
                    {
                        "name": "call_id",
                        "in": "path",
                        "description": "A call id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "if was accepted, return a Videocall",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "description": "Call was waiting for more than 40 seconds and was considered LOST",
                                            "properties": {
                                                "success": {
                                                    "type": "boolean",
                                                    "example": "true"
                                                },
                                                "data": {
                                                    "properties": {
                                                        "videocall": {
                                                            "properties": {
                                                                "status": {
                                                                    "type": "string",
                                                                    "example": "lost"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "message": {
                                                    "description": "Listing calls",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "description": "Call was refused by beamer",
                                            "properties": {
                                                "success": {
                                                    "type": "boolean",
                                                    "example": "true"
                                                },
                                                "data": {
                                                    "properties": {
                                                        "videocall": {
                                                            "properties": {
                                                                "status": {
                                                                    "type": "string",
                                                                    "example": "rejected"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "message": {
                                                    "description": "Listing calls",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "description": "Beamer hasn't accepted yet",
                                            "properties": {
                                                "success": {
                                                    "type": "boolean",
                                                    "example": "true"
                                                },
                                                "data": {
                                                    "properties": {
                                                        "videocall": {
                                                            "properties": {
                                                                "status": {
                                                                    "type": "string",
                                                                    "example": "not_accepted_yet"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "message": {
                                                    "description": "Listing calls",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "description": "Beamer accepted the call",
                                            "properties": {
                                                "success": {
                                                    "type": "boolean",
                                                    "example": "true"
                                                },
                                                "data": {
                                                    "properties": {
                                                        "videocall": {
                                                            "$ref": "#/components/schemas/videocall"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "message": {
                                                    "description": "Messages from api",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "user_id or beamer id not recognized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/baseerror"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/calls/{call_id}/savelog": {
            "post": {
                "tags": [
                    "videocall  ðŸ”’"
                ],
                "description": "Beamer and Client send logs of call status. ",
                "operationId": "1b4880a8302023463033fd4b488cf0f0",
                "parameters": [
                    {
                        "name": "call_id",
                        "in": "path",
                        "description": "A call id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "if exists, return a Videocall",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Status of request",
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "properties": {
                                                "videocall": {
                                                    "$ref": "#/components/schemas/videocallshort"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "description": "Messages from api",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "user_id or beamer id not recognized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/baseerror"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/calls/{call_id}/rating": {
            "post": {
                "tags": [
                    "videocall  ðŸ”’"
                ],
                "description": "Beamer and Client send evalution of negotiation. ",
                "operationId": "5e5661ad67484f4db18a74fd665f3c90",
                "parameters": [
                    {
                        "name": "call_id",
                        "in": "path",
                        "description": "A call id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "rating": {
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "if exists, return a Videocall"
                    },
                    "400": {
                        "description": "user_id or beamer id not recognized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/baseerror"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/calls/{call_id}/timer/start": {
            "get": {
                "tags": [
                    "videocall  ðŸ”’"
                ],
                "description": "Beamer asks the customer for the start time that will be charged",
                "operationId": "af57e8967537484624a9a8fbedc7c4b9",
                "parameters": [
                    {
                        "name": "call_id",
                        "in": "path",
                        "description": "A call id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return true to successfully request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/base"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "user_id or beamer id not recognized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/baseerror"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/calls/{call_id}/timer/accept": {
            "get": {
                "tags": [
                    "videocall  ðŸ”’"
                ],
                "description": "Customer accepts the start of the billing period",
                "operationId": "c8f1fa0c88989ead1cb4339359ef7cba",
                "parameters": [
                    {
                        "name": "call_id",
                        "in": "path",
                        "description": "A call id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return true to successfully request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/base"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "user_id or beamer id not recognized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/baseerror"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/calls/{call_id}/timer/reject": {
            "get": {
                "tags": [
                    "videocall  ðŸ”’"
                ],
                "description": "Customer reject the start of the billing period",
                "operationId": "4b740f048b186b844f029a9fb9b424d5",
                "parameters": [
                    {
                        "name": "call_id",
                        "in": "path",
                        "description": "A call id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return true to successfully reject",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/base"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "user_id or beamer id not recognized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/baseerror"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/catalog/add": {
            "post": {
                "tags": [
                    "catalog ðŸ”’"
                ],
                "operationId": "81444f40fc3302a75e2ea5cb6cdf0365",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/productrequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A product list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Status of request",
                                            "type": "boolean"
                                        },
                                        "products": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/userproduct"
                                            }
                                        },
                                        "message": {
                                            "description": "Messages from api",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Product add error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/baseerror"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/catalog/update/{product_id}": {
            "post": {
                "tags": [
                    "catalog ðŸ”’"
                ],
                "operationId": "bb528a640f7a03526a43e6d8ebac9a12",
                "parameters": [
                    {
                        "name": "product_id",
                        "in": "path",
                        "description": "A product id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/productrequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A product list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Status of request",
                                            "type": "boolean"
                                        },
                                        "products": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/userproduct"
                                            }
                                        },
                                        "message": {
                                            "description": "Messages from api",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Product update error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/baseerror"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/catalog": {
            "get": {
                "tags": [
                    "catalog ðŸ”’"
                ],
                "description": "Returns products catalog",
                "operationId": "0faf918b2be9b27485b8f7581321ea28",
                "responses": {
                    "200": {
                        "description": "A product list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Status of request",
                                            "type": "boolean"
                                        },
                                        "products": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/userproduct"
                                            }
                                        },
                                        "message": {
                                            "description": "Messages from api",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Call or user id nvalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/baseerror"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/catalog/delete/{product_id}": {
            "delete": {
                "tags": [
                    "catalog ðŸ”’"
                ],
                "description": "Delete a product",
                "operationId": "19d18d54353c44d3db773bd4694a8a2c",
                "parameters": [
                    {
                        "name": "product_id",
                        "in": "path",
                        "description": "A product id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A product list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Status of request",
                                            "type": "boolean"
                                        },
                                        "products": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/userproduct"
                                            }
                                        },
                                        "message": {
                                            "description": "Messages from api",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Call or user id nvalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/baseerror"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/follow/{beamer_id}": {
            "get": {
                "tags": [
                    "beamer"
                ],
                "operationId": "2522c62aec3d8a1e9acb4ae6321001af",
                "parameters": [
                    {
                        "name": "beamer_id",
                        "in": "path",
                        "description": "A beamer id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get follow status of a user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "type": "follow"
                                        },
                                        {
                                            "type": "autherror"
                                        }
                                    ]
                                },
                                "examples": {
                                    "following": {
                                        "summary": "An following return.",
                                        "value": {
                                            "total": 21,
                                            "this_user_follow": 1
                                        }
                                    },
                                    "unfollowing": {
                                        "summary": "An unfollowing return.",
                                        "value": {
                                            "total": 20,
                                            "this_user_follow": 0
                                        }
                                    },
                                    "auth error": {
                                        "summary": "An auth error",
                                        "value": {
                                            "success": false,
                                            "message": "Auth error. Header Baerer is required."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/search_beamer": {
            "post": {
                "tags": [
                    "maps and feed"
                ],
                "description": "Search active beamers",
                "operationId": "29876a45c24cd8c444df6571b5b21d0e",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "category": {
                                        "description": "(optional)",
                                        "type": "integer"
                                    },
                                    "keyword": {
                                        "description": "(optional)",
                                        "type": "string"
                                    },
                                    "tabs": {
                                        "description": "following or discover",
                                        "type": "string"
                                    },
                                    "cords[lat0]": {
                                        "type": "number",
                                        "nullable": true
                                    },
                                    "cords[lng0]": {
                                        "type": "number",
                                        "nullable": true
                                    },
                                    "cords[lat1]": {
                                        "type": "number",
                                        "nullable": true
                                    },
                                    "cords[lng1]": {
                                        "type": "number",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Get list of bearmer online",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/basepins"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/search_beamer_summary": {
            "post": {
                "tags": [
                    "maps and feed"
                ],
                "description": "Search active beamers",
                "operationId": "2fd995892a107b356460cc518c3277d9",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "category": {
                                        "description": "(optional)",
                                        "type": "integer"
                                    },
                                    "keyword": {
                                        "description": "(optional)",
                                        "type": "string"
                                    },
                                    "cords[lat0]": {
                                        "type": "number",
                                        "nullable": true
                                    },
                                    "cords[lng0]": {
                                        "type": "number",
                                        "nullable": true
                                    },
                                    "cords[lat1]": {
                                        "type": "number",
                                        "nullable": true
                                    },
                                    "cords[lng1]": {
                                        "type": "number",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Get list of bearmer online",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/basepins"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/payments/customer": {
            "get": {
                "tags": [
                    "payments ðŸ”’"
                ],
                "description": "Get (or create) a customer_id on Stripe",
                "operationId": "470563795a0627b70dfaaef36c68d4fe",
                "responses": {
                    "200": {
                        "description": "Returns a customer_id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": "3"
                                        },
                                        "customer_id": {
                                            "description": "A stripe customer id",
                                            "type": "string",
                                            "example": "cus_9999"
                                        },
                                        "messages": {
                                            "type": "array",
                                            "items": {}
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Auth error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/baseerror"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/payments/ephemeralkey": {
            "get": {
                "tags": [
                    "payments ðŸ”’"
                ],
                "description": "Create and return ephemeralkey on Stripe",
                "operationId": "5b5c8ffd276f73669e2c6ad78be8bde9",
                "responses": {
                    "200": {
                        "description": "Returns ephemeralkey",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "ephemeralKey": {
                                            "description": "A stripe Ephemeral Key",
                                            "type": "string",
                                            "example": "ek_test_YWNjdF8xTT....3245345"
                                        },
                                        "messages": {
                                            "type": "array",
                                            "items": {}
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Auth error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/baseerror"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/payments/success": {
            "post": {
                "tags": [
                    "payments ðŸ”’"
                ],
                "description": "Reports the success of a payment transaction with Stripe",
                "operationId": "0d1224d98a052a6787c430c08bc0e0e1",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "payment_intent_id": {
                                        "type": "string",
                                        "example": "pi_3N8k0RK6bwy......DLer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success return of request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "messages": {
                                            "type": "array",
                                            "items": {}
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Auth error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/baseerror"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/payments/paymentintent/guarantee": {
            "get": {
                "tags": [
                    "payments ðŸ”’"
                ],
                "description": "Create a payment intent for a 1 euro deposit (no need to send parameters)",
                "operationId": "0ebe4d49d8b2009603aa9cb0a3c05b58",
                "responses": {
                    "200": {
                        "description": "Returns payment intent id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "payment_intent_id": {
                                            "description": "A stripe payment intent id",
                                            "type": "string",
                                            "example": "pi_3Nbr...MD0nXVeXaX"
                                        },
                                        "client_secret": {
                                            "description": "A stripe client secret",
                                            "type": "string",
                                            "example": "pi_3NG4brK..._secret_...hUfR2"
                                        },
                                        "amount": {
                                            "type": "integer",
                                            "example": "100"
                                        },
                                        "currency": {
                                            "type": "string",
                                            "example": "eur"
                                        },
                                        "payment_method_types": {
                                            "type": "array",
                                            "items": {},
                                            "example": [
                                                "card"
                                            ]
                                        },
                                        "messages": {
                                            "type": "array",
                                            "items": {}
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Auth error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/baseerror"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/payments/paymentintent": {
            "post": {
                "tags": [
                    "payments ðŸ”’"
                ],
                "description": "At the end of call, this route create a payment intent to UI of Stripe+ReactJS",
                "operationId": "79ca294460871dafd26b169d4d49e470",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "call_id": {
                                        "type": "integer"
                                    },
                                    "amount": {
                                        "description": "call amount in cents",
                                        "type": "integer"
                                    },
                                    "currency": {
                                        "type": "string",
                                        "example": "eur"
                                    },
                                    "payment_method_types[0]": {
                                        "type": "string",
                                        "example": "card"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns payment intent id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "payment_intent_id": {
                                            "description": "A stripe payment intent id",
                                            "type": "string",
                                            "example": "pi_3Nbr...MD0nXVeXaX"
                                        },
                                        "client_secret": {
                                            "description": "A stripe client secret",
                                            "type": "string",
                                            "example": "pi_3NG4brK..._secret_...hUfR2"
                                        },
                                        "amount": {
                                            "type": "integer",
                                            "example": "100"
                                        },
                                        "currency": {
                                            "type": "string",
                                            "example": "eur"
                                        },
                                        "payment_method_types": {
                                            "type": "array",
                                            "items": {},
                                            "example": [
                                                "card"
                                            ]
                                        },
                                        "messages": {
                                            "type": "array",
                                            "items": {}
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Product add error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/baseerror"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/payments/paycall": {
            "post": {
                "tags": [
                    "payments ðŸ”’"
                ],
                "operationId": "2aed702df8f2f7c8be224864e5783644",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "call_id": {
                                        "type": "integer"
                                    },
                                    "amount": {
                                        "description": "call amount in cents",
                                        "type": "integer"
                                    },
                                    "use_wallet_amount": {
                                        "description": "use wallet as part of payment (in cents)",
                                        "type": "integer"
                                    },
                                    "currency": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Get a status of a added product",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Product add error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/baseerror"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/already_registered": {
            "post": {
                "tags": [
                    "register"
                ],
                "summary": "Verify if email already_registered",
                "operationId": "ba644bfad9aad0f1bbbc7a75571e9b17",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Email avaiable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Status of request",
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "properties": {
                                                "available": {
                                                    "type": "boolean"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "description": "OK",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Verify already registered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/baseerror"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "Login route",
                "operationId": "6f20dc7ec2b1a4cb7d2e0b05a15fa107",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    },
                                    "interface_as": {
                                        "type": "string"
                                    },
                                    "firebase_token": {
                                        "description": "Firebase device token",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/baseusers"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Login error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/baseerror"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/register_client_simple": {
            "post": {
                "tags": [
                    "register"
                ],
                "operationId": "267ecb6cb662ee8c82593bc5ec7d1deb",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/clientrequestsimple"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User registred successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/user"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Register error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/validationerror"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/register_client": {
            "post": {
                "tags": [
                    "register"
                ],
                "operationId": "ac417592006cee601510217dabd9dab0",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/clientrequest2"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Get follow status of a user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/validationerror"
                                        },
                                        {
                                            "$ref": "#/components/schemas/user"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Register error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/baseerror"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/register_beamer": {
            "post": {
                "tags": [
                    "register"
                ],
                "operationId": "146fa56afb70596739eea7f1e43c5153",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/beamerrequest2"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Get follow status of a user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/user"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Register error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/baseerror"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/register/newotp": {
            "post": {
                "tags": [
                    "register"
                ],
                "operationId": "8d021b696b3e35fa9f5f48d6e8cf1703",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Generate and send by email a six digit number",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/validationerror"
                                        },
                                        {
                                            "$ref": "#/components/schemas/base"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/register/verifyotp": {
            "post": {
                "tags": [
                    "register"
                ],
                "operationId": "284b64e842231b567b5ddccad47ecc5b",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    },
                                    "number_otp": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Generate and send by email a six digit number",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/validationerror"
                                        },
                                        {
                                            "$ref": "#/components/schemas/base"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "OTP verify error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/baseerror"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/settings": {
            "get": {
                "tags": [
                    "settings"
                ],
                "operationId": "563b89a5440e3cd2b977f9fd5e3ed7e7",
                "responses": {
                    "200": {
                        "description": "Get app general settings",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "properties": {
                                                "video_sdk_token": {
                                                    "description": "Key to video sdk api",
                                                    "type": "string"
                                                },
                                                "languages_list": {
                                                    "description": "Languages avaiable",
                                                    "type": "string"
                                                },
                                                "categories": {
                                                    "description": "All categories",
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/categoryshort"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "messages": {
                                            "type": "array",
                                            "items": {},
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/shopper/{call_id}/product/add": {
            "post": {
                "tags": [
                    "shopper ðŸ”’"
                ],
                "operationId": "90e996b588901782fa54021625907f06",
                "parameters": [
                    {
                        "name": "call_id",
                        "in": "path",
                        "description": "A call id number",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/productrequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Get a status of a added product",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shoppingsingle"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Product add error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/baseerror"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/shopper/beamer/catalog": {
            "get": {
                "tags": [
                    "shopper ðŸ”’"
                ],
                "description": "Returns products catalog",
                "operationId": "00135f58a8eb8a90d806ac43dbe98cfe",
                "responses": {
                    "200": {
                        "description": "A product list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Status of request",
                                            "type": "boolean"
                                        },
                                        "products": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/userproduct"
                                            }
                                        },
                                        "message": {
                                            "description": "Messages from api",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Call or user id nvalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/baseerror"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/shopper/{call_id}/products/new": {
            "get": {
                "tags": [
                    "shopper ðŸ”’"
                ],
                "description": "Returns products made available by beamer still in new status",
                "operationId": "10b26e3b2215a10a672a0bc894395c9a",
                "parameters": [
                    {
                        "name": "call_id",
                        "in": "path",
                        "description": "A call id number",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A product list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shoppinglist"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Call or user id nvalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/baseerror"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/shopper/{call_id}/products/all": {
            "get": {
                "tags": [
                    "shopper ðŸ”’"
                ],
                "description": "Returns products made available by the beamer in any status",
                "operationId": "9e4a8feecd5ec436fa7c3ede8c91868c",
                "parameters": [
                    {
                        "name": "call_id",
                        "in": "path",
                        "description": "A call id number",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A product list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shoppinglist"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Call or user id nvalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/baseerror"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/shopper/{call_id}/{product_id}/confirm": {
            "get": {
                "tags": [
                    "shopper ðŸ”’"
                ],
                "description": "Client add the product to shopping cart",
                "operationId": "75ed985147804437e17ce1890c3151be",
                "parameters": [
                    {
                        "name": "call_id",
                        "in": "path",
                        "description": "A call id number",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "product_id",
                        "in": "path",
                        "description": "A product id number",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A updated product list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shoppinglist"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Call or Product id invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/baseerror"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/shopper/{call_id}/{product_id}/reject": {
            "get": {
                "tags": [
                    "shopper ðŸ”’"
                ],
                "description": "Client reject the product",
                "operationId": "4f8982ce2bb13309ee0853d3b5ac6fa6",
                "parameters": [
                    {
                        "name": "call_id",
                        "in": "path",
                        "description": "A call id number",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "product_id",
                        "in": "path",
                        "description": "A product id number",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A updated product list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shoppinglist"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Call or Product id invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/baseerror"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/shopper/{call_id}/{product_id}/read": {
            "get": {
                "tags": [
                    "shopper ðŸ”’"
                ],
                "description": "Set a status of a product from 'new' to 'read'",
                "operationId": "04259a12404efb5cc2e4a17ec4055e75",
                "parameters": [
                    {
                        "name": "call_id",
                        "in": "path",
                        "description": "A call id number",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "product_id",
                        "in": "path",
                        "description": "A product id number",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A updated product list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shoppinglist"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Call or Product id invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/baseerror"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/shopper/{call_id}/checkout": {
            "post": {
                "tags": [
                    "shopper ðŸ”’"
                ],
                "description": "Returns products aceppted, shipping cost and checkout details",
                "operationId": "916cbde1356e2e9f374f3158915835fd",
                "parameters": [
                    {
                        "name": "call_id",
                        "in": "path",
                        "description": "A call id number",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/checkoutrequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A checkout details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/checkout"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Call or user id nvalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/baseerror"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/me": {
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "Requires authentication",
                "operationId": "4e540471d7a4528a28a5802d5df8d55a",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "firebase_token": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Sumary of user properties",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Status of request",
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "description": "Request datas",
                                            "properties": {
                                                "user": {
                                                    "$ref": "#/components/schemas/user"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "description": "Messages from api",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Auth error. Header Baerer is required.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/baseerror"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user/status": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Requires authentication",
                "operationId": "3d90ea62f0230f1fc614950a178f5619",
                "responses": {
                    "200": {
                        "description": "Sumary of user properties",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Status of request",
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "description": "Request datas",
                                            "properties": {
                                                "user": {
                                                    "$ref": "#/components/schemas/simpleuser"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "description": "Messages from api",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Auth error. Header Baerer is required.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/baseerror"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/users/{user_id}/edit": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Requires authentication",
                "operationId": "0e2ad23acec4b9760694be3078fbfe7f",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "A user id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "interface_as",
                        "in": "path",
                        "description": "Editing as client ou as beamer ?",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sumary of user properties",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Status of request",
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "description": "Request datas",
                                            "properties": {
                                                "user": {
                                                    "$ref": "#/components/schemas/user"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "description": "Messages from api",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Auth error. Header Baerer is required.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/baseerror"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/logout": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Requires authentication",
                "operationId": "9f0d8afbf3e5cf306c85d4f4ee615515",
                "responses": {
                    "200": {
                        "description": "Logout",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Auth error. Header Baerer is required.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/baseerror"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/users/{user_id}/start_track": {
            "post": {
                "tags": [
                    "track ðŸ”’"
                ],
                "operationId": "f88ec21979cd0af2a62637c679dec700",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "A beamer id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "lat": {
                                        "type": "number"
                                    },
                                    "lng": {
                                        "type": "number"
                                    },
                                    "cost_per_minute": {
                                        "type": "number"
                                    },
                                    "event_title": {
                                        "type": "string"
                                    },
                                    "categories[]": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Track start with success",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "user_id incompatible with the  param user_id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/baseerror"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/{user_id}/end_track": {
            "post": {
                "tags": [
                    "track ðŸ”’"
                ],
                "description": "Beamber turns off line",
                "operationId": "1b7d0085f99951773466bf866dd5b60e",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "A user id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "lat": {
                                        "type": "number"
                                    },
                                    "lng": {
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User end track successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/base"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "user_id or beamer id not recognized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/baseerror"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/{user_id}/update_track": {
            "post": {
                "tags": [
                    "track ðŸ”’"
                ],
                "operationId": "77cee524b2e336dd6a582f406e9caa5c",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "A user id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "lat": {
                                        "type": "number"
                                    },
                                    "lng": {
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User coords updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/base"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "user_id or beamer id not recognized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/baseerror"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/{user_id}/update_client": {
            "put": {
                "tags": [
                    "register"
                ],
                "operationId": "12162a74590fba583e2c9021c8a9d9a6",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "A client id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/clientupdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Get follow status of a user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/validationerror"
                                        },
                                        {
                                            "$ref": "#/components/schemas/user"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Register error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/baseerror"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/{user_id}/update_beamer": {
            "put": {
                "tags": [
                    "register"
                ],
                "operationId": "50579a3dc55112431a20627607c08444",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "A beamer id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/beamerupdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Get follow status of a user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/validationerror"
                                        },
                                        {
                                            "$ref": "#/components/schemas/user"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Register error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/baseerror"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/{user_id}/video": {
            "post": {
                "tags": [
                    "track ðŸ”’"
                ],
                "operationId": "036a0324c1f489674f7f5ee57565f767",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "A beamer id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "video_file": {
                                        "description": "Max 30 MBytes",
                                        "type": "file",
                                        "format": "file"
                                    },
                                    "teaser_text": {
                                        "type": "string"
                                    },
                                    "teaser_style": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Video uploaded with success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "properties": {
                                                "original": {
                                                    "type": "string"
                                                },
                                                "teaser_text": {
                                                    "type": "string"
                                                },
                                                "teaser_style": {
                                                    "type": "string"
                                                },
                                                "file_url_to_download": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "messages": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Upload problem encountered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/baseerror"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/getcard/{hash}": {
            "get": {
                "tags": [
                    "users"
                ],
                "description": "Get a user info. The route /api/share/{hash} returns the same response",
                "operationId": "97bb3a733433b07ccacf6440b68c1301",
                "parameters": [
                    {
                        "name": "hash",
                        "in": "path",
                        "description": "A beamer hash or beamer id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get list of bearmer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/basepins"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/profile/{hash}": {
            "get": {
                "tags": [
                    "beamer"
                ],
                "summary": "Does not require authentication",
                "description": "Get a beamer profile.",
                "operationId": "76a26e734dc87dd335c819e39e972bc0",
                "parameters": [
                    {
                        "name": "hash",
                        "in": "path",
                        "description": "A beamer uuid or beamer id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get beamer profile",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Status of request",
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "description": "Request datas",
                                            "properties": {
                                                "profile": {
                                                    "$ref": "#/components/schemas/profile"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "description": "Messages from api",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/profilemany": {
            "get": {
                "tags": [
                    "beamer"
                ],
                "summary": "Does not require authentication",
                "description": "Get severals beamer profiles.",
                "operationId": "7bf30741da4a1abe7c064ff82afd5c7a",
                "responses": {
                    "200": {
                        "description": "Get severals beamer profiles",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Status of request",
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "description": "Request datas",
                                            "properties": {
                                                "manyprofile": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/profile"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "description": "Messages from api",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/{user_id}/quick_on": {
            "post": {
                "tags": [
                    "track ðŸ”’"
                ],
                "description": "Beamber turns on line in one click",
                "operationId": "10f5098af38a7a17f08db06a07695f59",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "A beamer id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "lat": {
                                        "type": "number"
                                    },
                                    "lng": {
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Sumary of user properties",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Status of request",
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "description": "Request datas",
                                            "properties": {
                                                "user": {
                                                    "$ref": "#/components/schemas/simpleuser"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "description": "Messages from api",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "user_id incompatible with the  param user_id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/baseerror"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/{user_id}/quick_off": {
            "post": {
                "tags": [
                    "track ðŸ”’"
                ],
                "description": "Beamber turns off line",
                "operationId": "8bc49f0fb2c9e9faa560d700c9d5b504",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "A user id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User end track successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/base"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "user_id or beamer id not recognized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/baseerror"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/{user_id}/switch_to/{mode}": {
            "get": {
                "tags": [
                    "register"
                ],
                "description": "Beamber switch to line in one click",
                "operationId": "adc92a3ee4a73d0dfe60305d9a960bcf",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "A beamer id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "mode",
                        "in": "path",
                        "description": "Should be beamer or client",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sumary of user properties",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Status of request",
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "description": "Request datas",
                                            "properties": {
                                                "user": {
                                                    "$ref": "#/components/schemas/simpleuser"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "description": "Messages from api",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "user_id incompatible with the  param user_id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/baseerror"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/contact-save": {
            "post": {
                "tags": [
                    "site beamble.com"
                ],
                "description": "Forms on site beamble.com",
                "operationId": "0925c28fe363761f0d5768121616fce1",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    },
                                    "message": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "surname": {
                                        "type": "string"
                                    },
                                    "profile_type": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {}
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/firebase-on-google/client-ask": {
            "options": {
                "tags": [
                    "push notifications"
                ],
                "description": "This path is not used. It is only do documentation porpouse.",
                "operationId": "39ba5fb9a3025635447635312fbfad59",
                "responses": {
                    "200": {
                        "description": "Object 'data' send with push notifications",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "description": "object send with push notification",
                                            "properties": {
                                                "event": {
                                                    "description": "event name",
                                                    "type": "string"
                                                },
                                                "url": {
                                                    "description": "url to use in app routes",
                                                    "type": "string",
                                                    "example": "beamble://lobby/[call_id]"
                                                },
                                                "callId": {
                                                    "description": "callId",
                                                    "type": "number"
                                                },
                                                "client_name": {
                                                    "description": "name of client",
                                                    "type": "string"
                                                },
                                                "beamer_id": {
                                                    "description": "beamer_id",
                                                    "type": "number"
                                                },
                                                "client_id": {
                                                    "description": "client_id",
                                                    "type": "number"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/firebase-on-google/beamer-accepted": {
            "options": {
                "tags": [
                    "push notifications"
                ],
                "description": "This path is not used. It is only do documentation porpouse.",
                "operationId": "c878b1e75ef2c43f1561a34f2b129722",
                "responses": {
                    "200": {
                        "description": "Object 'data' send with push notifications",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "description": "object send with push notification",
                                            "properties": {
                                                "event": {
                                                    "description": "event name",
                                                    "type": "string",
                                                    "example": "beamer_accept"
                                                },
                                                "url": {
                                                    "description": "url to use in app routes",
                                                    "type": "string",
                                                    "example": "beamble://premeeting"
                                                },
                                                "callId": {
                                                    "type": "number"
                                                },
                                                "client_id": {
                                                    "type": "number"
                                                },
                                                "beamer_id": {
                                                    "type": "number"
                                                },
                                                "meeting_id": {
                                                    "type": "string",
                                                    "example": "awsada-qawead-asasd"
                                                },
                                                "meeting_object": {
                                                    "$ref": "#/components/schemas/meetingobject"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/firebase-on-google/product-addded": {
            "options": {
                "tags": [
                    "push notifications"
                ],
                "description": "This path is not used. It is only do documentation porpouse.",
                "operationId": "1e4719e5ee5a2a409049eed84a47a9f4",
                "responses": {
                    "200": {
                        "description": "Object 'data' send with push notifications",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "description": "object send with push notification",
                                            "properties": {
                                                "event": {
                                                    "description": "event name",
                                                    "type": "string",
                                                    "example": "beamer_product_offer"
                                                },
                                                "callId": {
                                                    "type": "integer"
                                                },
                                                "url": {
                                                    "description": "url to use in app routes",
                                                    "type": "string",
                                                    "example": "beamble://cart"
                                                },
                                                "product": {
                                                    "$ref": "#/components/schemas/product"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/firebase-on-google/beamer-rejected": {
            "options": {
                "tags": [
                    "push notifications"
                ],
                "description": "This path is not used. It is only do documentation porpouse.",
                "operationId": "d2797c850cba9ba4657de8e7e4902eaa",
                "responses": {
                    "200": {
                        "description": "Object 'data' send with push notifications",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "description": "object send with push notification",
                                            "properties": {
                                                "event": {
                                                    "description": "event name",
                                                    "type": "string",
                                                    "example": "beamer_reject"
                                                },
                                                "url": {
                                                    "description": "url to use in app routes",
                                                    "type": "string",
                                                    "example": "beamble://home"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/firebase-on-google/call-timer": {
            "options": {
                "tags": [
                    "push notifications"
                ],
                "description": "This path is not used. It is only do documentation porpouse.",
                "operationId": "8c0aeaef0849ee38acbba2cac07cc250",
                "responses": {
                    "200": {
                        "description": "Object 'data' send with push notifications",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "description": "object send with push notification",
                                            "properties": {
                                                "event": {
                                                    "description": "event name",
                                                    "type": "string",
                                                    "example": "timer_start"
                                                },
                                                "callId": {
                                                    "type": "integer"
                                                },
                                                "url": {
                                                    "description": "url to use in app routes",
                                                    "type": "string",
                                                    "example": "beamble://meeting"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "beamerrequest2": {
                "properties": {
                    "company_name": {
                        "description": "Company name",
                        "type": "string"
                    },
                    "email": {
                        "description": "Email",
                        "type": "string"
                    },
                    "name": {
                        "description": "Seller name",
                        "type": "string"
                    },
                    "surname": {
                        "description": "Seller surname",
                        "type": "string"
                    },
                    "my_language[]": {
                        "description": "Language. It can be my_language:fr also.",
                        "type": "string"
                    },
                    "password": {
                        "description": "Password",
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "store_address": {
                        "description": "Store address",
                        "type": "string"
                    },
                    "store_postal_code": {
                        "description": "Store postal_code",
                        "type": "string"
                    },
                    "store_city": {
                        "description": "Store city",
                        "type": "string"
                    },
                    "store_country": {
                        "description": "Store country",
                        "type": "string"
                    },
                    "company_doc": {
                        "description": "Store document number (SIRET)",
                        "type": "string"
                    },
                    "tos_accepted": {
                        "description": "Terms of service. should be a string 'yes'",
                        "type": "string"
                    },
                    "accept_parcel_return": {
                        "description": "Accept parcel return. Should be 0 or 1",
                        "type": "integer",
                        "nullable": true
                    },
                    "second_hand_resaler": {
                        "description": "second hand resaler. Should be 0 or 1, default is 0",
                        "type": "integer",
                        "nullable": true
                    },
                    "level_expertise": {
                        "type": "string",
                        "nullable": true
                    },
                    "company_type": {
                        "description": "Company type",
                        "type": "enum['instore', 'freelance']"
                    },
                    "company_description": {
                        "description": "Company description",
                        "type": "string"
                    },
                    "website": {
                        "description": "Company URL",
                        "type": "string"
                    },
                    "image_foto": {
                        "description": "Base64 encoded profile image",
                        "type": "string"
                    },
                    "image_logo": {
                        "description": "Base64 encoded logo image",
                        "type": "string"
                    },
                    "firebase_token": {
                        "description": "Firebase device token",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "beamerupdate": {
                "properties": {
                    "company_name": {
                        "description": "Company name",
                        "type": "string"
                    },
                    "name": {
                        "description": "Seller name",
                        "type": "string"
                    },
                    "surname": {
                        "description": "Seller surname",
                        "type": "string"
                    },
                    "my_language[]": {
                        "description": "Language. It can be my_language:fr also.",
                        "type": "string"
                    },
                    "password": {
                        "description": "Password",
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "store_address": {
                        "description": "Store address",
                        "type": "string"
                    },
                    "store_postal_code": {
                        "description": "Store postal_code",
                        "type": "string"
                    },
                    "store_city": {
                        "description": "Store city",
                        "type": "string"
                    },
                    "store_country": {
                        "description": "Store country",
                        "type": "string"
                    },
                    "company_doc": {
                        "description": "Store document number (SIRET)",
                        "type": "string"
                    },
                    "accept_parcel_return": {
                        "description": "Accept parcel return. Should be 0 or 1",
                        "type": "integer",
                        "nullable": true
                    },
                    "second_hand_resaler": {
                        "description": "second hand resaler. Should be 0 or 1, default is 0",
                        "type": "integer",
                        "nullable": true
                    },
                    "level_expertise": {
                        "type": "string",
                        "nullable": true
                    },
                    "company_type": {
                        "description": "Company type",
                        "type": "enum['instore', 'freelance']"
                    },
                    "company_description": {
                        "description": "Company description",
                        "type": "string"
                    },
                    "website": {
                        "description": "Company URL",
                        "type": "string"
                    },
                    "image_foto": {
                        "description": "Base64 encoded profile image",
                        "type": "string"
                    },
                    "image_logo": {
                        "description": "Base64 encoded logo image",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "clientrequest2": {
                "properties": {
                    "name": {
                        "description": "Full name",
                        "type": "string"
                    },
                    "my_language[]": {
                        "description": "Language. It can be my_language:fr also.",
                        "type": "string"
                    },
                    "email": {
                        "description": "Email",
                        "type": "string"
                    },
                    "password": {
                        "description": "Password",
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "address": {
                        "description": "User address",
                        "type": "string"
                    },
                    "postal_code": {
                        "description": "User postal_code",
                        "type": "string"
                    },
                    "city": {
                        "description": "User city",
                        "type": "string"
                    },
                    "country": {
                        "description": "User country",
                        "type": "string"
                    },
                    "tos_accepted": {
                        "description": "Terms of service. should be a string 'yes'",
                        "type": "string"
                    },
                    "firebase_token": {
                        "description": "Firebase device token",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "clientrequestsimple": {
                "properties": {
                    "name": {
                        "description": "Name",
                        "type": "string"
                    },
                    "surname": {
                        "description": "Last name",
                        "type": "string"
                    },
                    "email": {
                        "description": "Email",
                        "type": "string"
                    },
                    "password": {
                        "description": "Password",
                        "type": "string"
                    },
                    "firebase_token": {
                        "description": "Firebase device token",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "clientupdate": {
                "properties": {
                    "name": {
                        "description": "First name",
                        "type": "string"
                    },
                    "suname": {
                        "description": "Last name",
                        "type": "string"
                    },
                    "my_language[]": {
                        "description": "Language. It can be my_language:fr also.",
                        "type": "string"
                    },
                    "password": {
                        "description": "Password",
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "address": {
                        "description": "User address",
                        "type": "string"
                    },
                    "postal_code": {
                        "description": "User postal_code",
                        "type": "string"
                    },
                    "city": {
                        "description": "User city",
                        "type": "string"
                    },
                    "country": {
                        "description": "User country",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "productrequest": {
                "required": [
                    "title",
                    "brand_name",
                    "description",
                    "product_price",
                    "product_image",
                    "product_weight",
                    "product_size"
                ],
                "properties": {
                    "brand_name": {
                        "description": "Brand name",
                        "type": "string"
                    },
                    "title": {
                        "description": "Product name",
                        "type": "string"
                    },
                    "color": {
                        "description": "Color",
                        "type": "string"
                    },
                    "fabric": {
                        "description": "Fabric",
                        "type": "string"
                    },
                    "condition": {
                        "description": "Condition",
                        "type": "string"
                    },
                    "size": {
                        "description": "Size of product",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description",
                        "type": "string"
                    },
                    "product_price": {
                        "description": "Product price in cents. Ex: 45.44 (EUR) should be 4544",
                        "type": "integer",
                        "nullable": true
                    },
                    "product_size": {
                        "description": "S or M or L or XL (size of product packaging)",
                        "type": "string",
                        "nullable": false
                    },
                    "product_weight": {
                        "description": "Product weight in Kilograms",
                        "type": "number",
                        "nullable": false
                    },
                    "product_currency": {
                        "description": "Default is eur",
                        "type": "string"
                    },
                    "product_image": {
                        "description": "Base64 encoded product image",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "autherror": {
                "properties": {
                    "success": {
                        "description": "request status",
                        "type": "boolean"
                    },
                    "message": {
                        "description": "request message",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "base": {
                "properties": {
                    "success": {
                        "description": "Status of request",
                        "type": "boolean"
                    },
                    "data": {
                        "description": "Requested datas",
                        "type": "array",
                        "items": {}
                    },
                    "message": {
                        "description": "Messages from api",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "baseerror": {
                "properties": {
                    "success": {
                        "description": "Status of request",
                        "type": "boolean",
                        "example": "false"
                    },
                    "data": {
                        "description": "Request failure details",
                        "type": "array",
                        "items": {}
                    },
                    "message": {
                        "description": "Message from api",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "basepins": {
                "properties": {
                    "success": {
                        "description": "Status of request",
                        "type": "boolean"
                    },
                    "data": {
                        "description": "Request datas",
                        "properties": {
                            "pins": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/pins"
                                }
                            }
                        },
                        "type": "object"
                    },
                    "message": {
                        "description": "Messages from api",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "shoppinglist": {
                "properties": {
                    "success": {
                        "description": "Status of request",
                        "type": "boolean"
                    },
                    "data": {
                        "description": "Request datas",
                        "properties": {
                            "products": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/product"
                                }
                            }
                        },
                        "type": "object"
                    },
                    "message": {
                        "description": "Messages from api",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "baseusers": {
                "properties": {
                    "success": {
                        "description": "Status of request",
                        "type": "boolean"
                    },
                    "data": {
                        "description": "Request datas",
                        "properties": {
                            "token": {
                                "description": "Used to required auth routes in Baerer header",
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "interface_as": {
                                "description": "client or beamer",
                                "type": "string"
                            },
                            "user": {
                                "$ref": "#/components/schemas/user"
                            }
                        },
                        "type": "object"
                    },
                    "message": {
                        "description": "Messages from api",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "checkout": {
                "properties": {
                    "success": {
                        "description": "Status of request",
                        "type": "boolean"
                    },
                    "data": {
                        "description": "Request datas",
                        "properties": {
                            "products": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/product"
                                }
                            },
                            "shipping": {
                                "properties": {
                                    "shipping_cost": {
                                        "type": "string"
                                    },
                                    "shipping_service": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "address": {
                                "properties": {
                                    "address": {
                                        "type": "string"
                                    },
                                    "postal_code": {
                                        "type": "string"
                                    },
                                    "city": {
                                        "type": "string"
                                    },
                                    "country": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "checkout": {
                                "properties": {
                                    "call_cost": {
                                        "type": "integer"
                                    },
                                    "products_cost": {
                                        "type": "integer"
                                    },
                                    "shipping_cost": {
                                        "type": "integer"
                                    },
                                    "use_wallet_amount": {
                                        "type": "integer"
                                    },
                                    "total_cost": {
                                        "type": "integer"
                                    },
                                    "currency": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "wallet": {
                                "properties": {
                                    "wallet_balance": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    },
                    "message": {
                        "description": "Messages from api",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "cords": {
                "properties": {
                    "lat0": {
                        "description": "Top right Latitute",
                        "type": "number"
                    },
                    "lng0": {
                        "description": "Top right Longitude",
                        "type": "number"
                    },
                    "lat1": {
                        "description": "Bottom left Latitute",
                        "type": "number"
                    },
                    "lng1": {
                        "description": "Bottom left Longitude",
                        "type": "number"
                    }
                },
                "type": "object"
            },
            "follow": {
                "properties": {
                    "total": {
                        "description": "Total of followers",
                        "type": "integer"
                    },
                    "this_user_follow": {
                        "description": "If the currently logged in user follows that Beamer",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "followers": {
                "properties": {
                    "name": {
                        "description": "Name of follower",
                        "type": "string"
                    },
                    "image": {
                        "description": "Photo of follower",
                        "type": "string"
                    },
                    "city_country": {
                        "description": "City, country of follower",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "history": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "uuid": {
                        "type": "string"
                    },
                    "online": {
                        "type": "integer"
                    },
                    "name": {
                        "description": "Name",
                        "type": "string"
                    },
                    "surname": {
                        "description": "Surname",
                        "type": "string"
                    },
                    "image": {
                        "description": "Photo",
                        "type": "string"
                    },
                    "city_country": {
                        "description": "City, country",
                        "type": "string"
                    },
                    "gmt_off_set": {
                        "type": "number"
                    },
                    "updated_at": {
                        "type": "string"
                    },
                    "updated_group": {
                        "type": "string"
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "categories_details": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/categoryshort"
                        }
                    }
                },
                "type": "object"
            },
            "meetingobject": {
                "properties": {
                    "webhook": {
                        "properties": {
                            "events": {
                                "type": "array",
                                "items": {}
                            }
                        },
                        "type": "object"
                    },
                    "disabled": {
                        "type": "boolean"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string"
                    },
                    "roomId": {
                        "type": "string"
                    },
                    "links": {
                        "properties": {
                            "get_room": {
                                "type": "string"
                            },
                            "get_session": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "pins": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "online": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "surname": {
                        "type": "string"
                    },
                    "pref_lang": {
                        "type": "string"
                    },
                    "beamer_type": {
                        "type": "string"
                    },
                    "with_donation": {
                        "type": "integer"
                    },
                    "is_freemium": {
                        "type": "integer"
                    },
                    "cost_per_minute": {
                        "type": "number"
                    },
                    "keywords": {
                        "type": "array",
                        "items": {}
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "categories_details": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/categoryshort"
                        }
                    },
                    "image": {
                        "type": "string"
                    },
                    "logo": {
                        "type": "string"
                    },
                    "feed_url": {
                        "type": "string"
                    },
                    "thumb_url": {
                        "type": "string"
                    },
                    "teaser_text": {
                        "type": "string"
                    },
                    "teaser_style": {
                        "type": "string"
                    },
                    "lat": {
                        "type": "number"
                    },
                    "lng": {
                        "type": "number"
                    },
                    "relevance": {
                        "type": "integer"
                    },
                    "uuid": {
                        "type": "string"
                    },
                    "share_url": {
                        "type": "string"
                    },
                    "website": {
                        "type": "string"
                    },
                    "rating": {
                        "type": "number"
                    },
                    "gmt_off_set": {
                        "type": "number"
                    },
                    "address": {
                        "type": "string"
                    },
                    "postal_code": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "company_name": {
                        "type": "string"
                    },
                    "company_type": {
                        "type": "string"
                    },
                    "followers": {
                        "$ref": "#/components/schemas/follow"
                    }
                },
                "type": "object"
            },
            "pinssummary": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "online": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "cost_per_minute": {
                        "type": "number"
                    },
                    "image": {
                        "type": "string"
                    },
                    "rating": {
                        "type": "number"
                    },
                    "location": {
                        "type": "string"
                    },
                    "company_type": {
                        "type": "string"
                    },
                    "followers": {
                        "$ref": "#/components/schemas/follow"
                    },
                    "all_teasers_summary": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/teaserssummary"
                        }
                    }
                },
                "type": "object"
            },
            "profile": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "online": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "company_type": {
                        "type": "string"
                    },
                    "company_name": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string"
                    },
                    "languages_code": {
                        "type": "array",
                        "items": {}
                    },
                    "languages_names": {
                        "type": "array",
                        "items": {}
                    },
                    "image": {
                        "type": "string"
                    },
                    "rating": {
                        "type": "number"
                    },
                    "rating_details": {
                        "type": "string"
                    },
                    "deals": {
                        "type": "integer"
                    },
                    "uuid": {
                        "type": "string"
                    },
                    "share_url": {
                        "type": "string"
                    },
                    "gmt_off_set": {
                        "type": "number"
                    },
                    "all_teasers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/teasers"
                        }
                    },
                    "followers": {
                        "$ref": "#/components/schemas/follow"
                    },
                    "followers_details": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/followers"
                        }
                    }
                },
                "type": "object"
            },
            "shoppingsingle": {
                "properties": {
                    "success": {
                        "description": "Status of request",
                        "type": "boolean"
                    },
                    "data": {
                        "description": "Request datas",
                        "properties": {
                            "product": {
                                "$ref": "#/components/schemas/userproduct"
                            }
                        },
                        "type": "object"
                    },
                    "message": {
                        "description": "Messages from api",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "teasers": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "feed_url": {
                        "type": "string"
                    },
                    "thumb_url": {
                        "type": "string"
                    },
                    "teaser_text": {
                        "type": "string"
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "categories_details": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/categoryshort"
                        }
                    }
                },
                "type": "object"
            },
            "teaserssummary": {
                "properties": {
                    "thumb_url": {
                        "type": "string"
                    },
                    "category_name": {
                        "type": "string"
                    },
                    "category_ionicons_class": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "user": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "email_verified": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "surname": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "position": {
                        "description": "on_line or off_line",
                        "type": "string"
                    },
                    "interface_as": {
                        "type": "string"
                    },
                    "keywords": {
                        "type": "array",
                        "items": {},
                        "nullable": true
                    },
                    "pref_lang": {
                        "type": "string"
                    },
                    "pref_lang_name": {
                        "type": "string"
                    },
                    "all_lang_names": {
                        "type": "array",
                        "items": {}
                    },
                    "client_enabled": {
                        "type": "boolean"
                    },
                    "beamer_enabled": {
                        "type": "boolean"
                    },
                    "shopper_enabled": {
                        "type": "boolean"
                    },
                    "quickon_enabled": {
                        "description": "Beamer is able to do a quick online",
                        "type": "boolean"
                    },
                    "client_account": {
                        "type": "boolean"
                    },
                    "beamer_account": {
                        "type": "boolean"
                    },
                    "image": {
                        "type": "string"
                    },
                    "logo": {
                        "type": "string"
                    },
                    "uuid": {
                        "type": "string"
                    },
                    "share_url": {
                        "type": "string"
                    },
                    "rating": {
                        "type": "number"
                    },
                    "deals": {
                        "type": "number"
                    },
                    "gmt_off_set": {
                        "type": "number"
                    },
                    "address": {
                        "type": "string"
                    },
                    "postal_code": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "website": {
                        "type": "string"
                    },
                    "company_name": {
                        "type": "string"
                    },
                    "company_type": {
                        "type": "string"
                    },
                    "company_doc": {
                        "type": "string"
                    },
                    "second_hand_resaler": {
                        "type": "number"
                    },
                    "level_expertise": {
                        "type": "string"
                    },
                    "accept_parcel_return": {
                        "type": "number"
                    },
                    "followers": {
                        "$ref": "#/components/schemas/follow"
                    }
                },
                "type": "object"
            },
            "userproduct": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "product_price": {
                        "type": "integer"
                    },
                    "product_currency": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "brand_name": {
                        "type": "string"
                    },
                    "color": {
                        "type": "string"
                    },
                    "fabric": {
                        "type": "string"
                    },
                    "condition": {
                        "type": "string"
                    },
                    "size": {
                        "type": "string"
                    },
                    "product_image": {
                        "description": "url of image",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "simpleuser": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "pref_lang": {
                        "type": "string"
                    },
                    "client_enabled": {
                        "description": "Customer has already made payment and has a saved card (or other form of payment) will have: True",
                        "type": "boolean"
                    },
                    "beamer_enabled": {
                        "description": "Beamer has already completed onboarding and is eligible to receive payment and will have: True",
                        "type": "boolean"
                    },
                    "shopper_enabled": {
                        "description": "Beamer is able to do the Shopper model (buy products in the store) and will have: True",
                        "type": "boolean"
                    },
                    "quickon_enabled": {
                        "description": "Beamer is able to do a quick online",
                        "type": "boolean"
                    },
                    "client_account": {
                        "type": "boolean"
                    },
                    "beamer_account": {
                        "type": "boolean"
                    },
                    "uuid": {
                        "type": "string"
                    },
                    "is_generic": {
                        "description": "If user is a generic",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "validationerror": {
                "properties": {
                    "success": {
                        "description": "validation status",
                        "type": "boolean"
                    },
                    "message": {
                        "description": "validation message",
                        "type": "string"
                    },
                    "data": {
                        "description": "Errors",
                        "type": "object",
                        "additionalProperties": {
                            "type": "array"
                        }
                    }
                },
                "type": "object"
            },
            "videocall": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "client_id": {
                        "type": "integer",
                        "nullable": true
                    },
                    "beamer_id": {
                        "type": "integer"
                    },
                    "other_id": {
                        "type": "integer"
                    },
                    "other_name": {
                        "type": "string"
                    },
                    "other_location": {
                        "type": "string"
                    },
                    "other_company_type": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "meeting_id": {
                        "type": "string"
                    },
                    "meeting_object": {
                        "$ref": "#/components/schemas/meetingobject"
                    },
                    "beamer_agree_at": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "product": {
                "properties": {
                    "product_id": {
                        "type": "integer"
                    },
                    "videocall_id": {
                        "type": "integer"
                    },
                    "status": {
                        "description": "Status of this product",
                        "type": "string",
                        "enum": [
                            "new",
                            "read",
                            "accepted",
                            "rejected"
                        ]
                    },
                    "product_price": {
                        "type": "integer"
                    },
                    "product_currency": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "brand_name": {
                        "type": "string"
                    },
                    "color": {
                        "type": "string"
                    },
                    "fabric": {
                        "type": "string"
                    },
                    "condition": {
                        "type": "string"
                    },
                    "size": {
                        "type": "string"
                    },
                    "product_image": {
                        "description": "Base64 encoded product image",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "videocallshort": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "client_id": {
                        "type": "integer",
                        "nullable": true
                    },
                    "beamer_id": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "string"
                    },
                    "duration": {
                        "type": "integer"
                    },
                    "billed_seconds": {
                        "type": "integer"
                    },
                    "environmental_care_msg": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "category": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "parent_id": {
                        "type": "integer",
                        "nullable": true
                    },
                    "title": {
                        "type": "string"
                    },
                    "icon_url": {
                        "type": "string"
                    },
                    "ionicons_class": {
                        "type": "string"
                    },
                    "subcategories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/subcategory"
                        },
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "categoryshort": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "title": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "checkoutrequest": {
                "properties": {
                    "products_accepted": {
                        "type": "array",
                        "items": {},
                        "example": [
                            "23",
                            "24"
                        ]
                    }
                },
                "type": "object"
            },
            "subcategory": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "parent_id": {
                        "type": "integer",
                        "nullable": true
                    },
                    "title": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "api_key": {
                "type": "apiKey",
                "name": "bearerAuth",
                "in": "header"
            }
        }
    },
    "tags": [
        {
            "name": "videocall  ðŸ”’",
            "description": "videocall  ðŸ”’"
        },
        {
            "name": "catalog ðŸ”’",
            "description": "catalog ðŸ”’"
        },
        {
            "name": "beamer",
            "description": "beamer"
        },
        {
            "name": "maps and feed",
            "description": "maps and feed"
        },
        {
            "name": "payments ðŸ”’",
            "description": "payments ðŸ”’"
        },
        {
            "name": "register",
            "description": "register"
        },
        {
            "name": "users",
            "description": "users"
        },
        {
            "name": "settings",
            "description": "settings"
        },
        {
            "name": "shopper ðŸ”’",
            "description": "shopper ðŸ”’"
        },
        {
            "name": "track ðŸ”’",
            "description": "track ðŸ”’"
        },
        {
            "name": "site beamble.com",
            "description": "site beamble.com"
        },
        {
            "name": "push notifications",
            "description": "push notifications"
        }
    ]
}